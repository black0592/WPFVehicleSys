<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
						 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
						 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
						 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
						 xmlns:vm="clr-namespace:MusicPlayer.ViewModel"
						 xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
						 xmlns:MusicPlayer_HelpBehavior="clr-namespace:MusicPlayer.HelpBehavior"
						 xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
						 x:Class="MusicPlayer.View.PlayingView"
						 mc:Ignorable="d"
						 d:DesignHeight="400"
						 d:DesignWidth="800"
						 d:DataContext="{d:DesignInstance {x:Type vm:PlayingViewModel}}">
		<UserControl.Resources>
				<LinearGradientBrush x:Key="HeightBrush"
														 EndPoint="0.992,0.37"
														 StartPoint="0.011,0.352">
						<GradientStop Color="#7FFFD200"
													Offset="0" />
						<GradientStop Color="#7FFFD200"
													Offset="1" />
						<GradientStop Color="{DynamicResource HeightYellowBrush}"
													Offset="0.522" />
				</LinearGradientBrush>
				<Style x:Key="NowPlayingListStyle"
							 TargetType="{x:Type ListBoxItem}">
						<Setter Property="Background"
										Value="Transparent" />
						<Setter Property="HorizontalContentAlignment"
										Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
						<Setter Property="VerticalContentAlignment"
										Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
						<Setter Property="Padding"
										Value="2,0,0,0" />
						<Setter Property="Template">
								<Setter.Value>
										<ControlTemplate TargetType="{x:Type ListBoxItem}">
												<Border x:Name="Bd"
																BorderBrush="{TemplateBinding BorderBrush}"
																BorderThickness="{TemplateBinding BorderThickness}"
																Background="{TemplateBinding Background}"
																Padding="{TemplateBinding Padding}"
																SnapsToDevicePixels="true"
																RenderTransformOrigin="0.5,0.5"
																Width="450">
														<VisualStateManager.VisualStateGroups>
																<VisualStateGroup x:Name="SelectionStates">
																		<VisualStateGroup.Transitions>
																				<VisualTransition GeneratedDuration="0:0:0.3" />
																		</VisualStateGroup.Transitions>
																		<VisualState x:Name="Unselected" />
																		<VisualState x:Name="Selected">
																				<Storyboard>
																						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
																																					 Storyboard.TargetName="rectangle">
																								<EasingDoubleKeyFrame KeyTime="0"
																																			Value="1">
																										<EasingDoubleKeyFrame.EasingFunction>
																												<BounceEase EasingMode="EaseIn" />
																										</EasingDoubleKeyFrame.EasingFunction>
																								</EasingDoubleKeyFrame>
																						</DoubleAnimationUsingKeyFrames>
																				</Storyboard>
																		</VisualState>
																		<VisualState x:Name="SelectedUnfocused">
																				<Storyboard>
																						<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
																																					 Storyboard.TargetName="rectangle">
																								<EasingDoubleKeyFrame KeyTime="0"
																																			Value="1">
																										<EasingDoubleKeyFrame.EasingFunction>
																												<BounceEase EasingMode="EaseIn" />
																										</EasingDoubleKeyFrame.EasingFunction>
																								</EasingDoubleKeyFrame>
																						</DoubleAnimationUsingKeyFrames>
																				</Storyboard>
																		</VisualState>
																</VisualStateGroup>
																<VisualStateGroup x:Name="CommonStates">
																		<VisualStateGroup.Transitions>
																				<VisualTransition GeneratedDuration="0" />
																		</VisualStateGroup.Transitions>
																		<VisualState x:Name="Normal" />
																		<VisualState x:Name="MouseOver" />
																		<VisualState x:Name="Disabled" />
																</VisualStateGroup>
																<VisualStateGroup x:Name="FocusStates">
																		<VisualState x:Name="Unfocused" />
																		<VisualState x:Name="Focused" />
																</VisualStateGroup>
																<VisualStateGroup x:Name="ValidationStates">
																		<VisualState x:Name="Valid" />
																		<VisualState x:Name="InvalidFocused" />
																		<VisualState x:Name="InvalidUnfocused" />
																</VisualStateGroup>
														</VisualStateManager.VisualStateGroups>
														<Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
																	Height="Auto"
																	Width="450"
																	VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
																<ContentPresenter x:Name="contentPresenter"
																									HorizontalAlignment="Stretch"
																									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
																									VerticalAlignment="Stretch"
																									RenderTransformOrigin="0.5,0.5"
																									Width="Auto">
																		<ContentPresenter.RenderTransform>
																				<TransformGroup>
																						<ScaleTransform />
																						<SkewTransform />
																						<RotateTransform />
																						<TranslateTransform />
																				</TransformGroup>
																		</ContentPresenter.RenderTransform>
																</ContentPresenter>
																<Rectangle x:Name="rectangle"
																					 Stroke="Black"
																					 Opacity="0"
																					 StrokeThickness="0"
																					 Panel.ZIndex="-1"
																					 Margin="5,0"
																					 Fill="{DynamicResource HeightBrush}" />
														</Grid>
												</Border>
										</ControlTemplate>
								</Setter.Value>
						</Setter>
				</Style>
				<!---->



		  <!---->
		</UserControl.Resources>
		<Grid Background="#00000000">
				<VisualStateManager.VisualStateGroups>
						<VisualStateGroup x:Name="PlayBtnVisible">
								<VisualStateGroup.Transitions>
										<VisualTransition GeneratedDuration="0:0:0.1" />
								</VisualStateGroup.Transitions>
								<VisualState x:Name="True">
										<Storyboard>
												<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
																											 Storyboard.TargetName="PlayBtn">
														<EasingDoubleKeyFrame KeyTime="0"
																									Value="1" />
												</DoubleAnimationUsingKeyFrames>
												<Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.ZIndex)"
																											Storyboard.TargetName="PlayBtn">
														<EasingInt32KeyFrame KeyTime="0"
																								 Value="1" />
												</Int32AnimationUsingKeyFrames>
										</Storyboard>
								</VisualState>
								<VisualState x:Name="False">
										<Storyboard>
												<Int32AnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.ZIndex)"
																											Storyboard.TargetName="PauseBtn">
														<EasingInt32KeyFrame KeyTime="0"
																								 Value="1" />
												</Int32AnimationUsingKeyFrames>
												<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
																											 Storyboard.TargetName="PauseBtn">
														<EasingDoubleKeyFrame KeyTime="0"
																									Value="1" />
												</DoubleAnimationUsingKeyFrames>
										</Storyboard>
								</VisualState>
						</VisualStateGroup>
				</VisualStateManager.VisualStateGroups>
				<Grid.ColumnDefinitions>
						<ColumnDefinition Width="0.382*" />
						<ColumnDefinition Width="0.618*" />
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
						<RowDefinition />
						<RowDefinition Height="Auto"
													 MinHeight="74.5" />
				</Grid.RowDefinitions>
				<Grid Margin="70,40,10,40">
						<Image x:Name="image"
									 HorizontalAlignment="Right"
									 Width="225.6">
								<Image.Source>
										<Binding Path="CurrentMusic.CoverImage">
												<Binding.TargetNullValue>
														<BitmapImage UriSource="/MusicPlayer;component/Pic/DefaultImage.png" />
												</Binding.TargetNullValue>
										</Binding>
								</Image.Source>
						</Image>
						<Image HorizontalAlignment="Right"
									 Width="225.6"
									 RenderTransformOrigin="0.5,0.5"
									 Margin="0,2,0,0"
									 Source="{Binding Source, ElementName=image}">
								<Image.RenderTransform>
										<TransformGroup>
												<ScaleTransform ScaleY="-1"
																				ScaleX="1" />
												<TranslateTransform Y="{Binding ActualHeight, ElementName=image}" />
										</TransformGroup>
								</Image.RenderTransform>
								<Image.OpacityMask>
										<LinearGradientBrush EndPoint="0.5,1"
																				 StartPoint="0.5,0">
												<GradientStop Color="#7F000000"
																			Offset="0.974" />
												<GradientStop Offset="0.804" />
												<GradientStop Color="#696D6D6D"
																			Offset="0.935" />
										</LinearGradientBrush>
								</Image.OpacityMask>
						</Image>
				</Grid>
				<ListBox Grid.Column="1"
								 Margin="20,40,0,40"
								 ItemsSource="{Binding PlayList}"
								 ItemTemplate="{DynamicResource PlayInfoTemplate}"
								 Background="{x:Null}"
								 Foreground="White"
								 ScrollViewer.VerticalScrollBarVisibility="Hidden"
								 SelectedItem="{Binding CurrentMusic}"
								 Width="455"
								 BorderThickness="0"
								 ScrollViewer.CanContentScroll="False"
								 HorizontalAlignment="Left"
								 SelectedIndex="0"
								 ItemContainerStyle="{DynamicResource NowPlayingListStyle}"
								 Style="{DynamicResource ListBoxStyle}"
								 ScrollViewer.HorizontalScrollBarVisibility="Hidden">
						<i:Interaction.Behaviors>
								<MusicPlayer_HelpBehavior:AutoScrollBehavior />
								<MusicPlayer_HelpBehavior:MouseScrollBehavior />
						</i:Interaction.Behaviors>
				</ListBox>
				<Image HorizontalAlignment="Left"
							 Height="36"
							 Margin="8,0,0,0"
							 VerticalAlignment="Top"
							 Width="81"
							 Source="/MusicPlayer;component/Pic/返回列表.png"
							 Stretch="UniformToFill"
							 Panel.ZIndex="10">
						<i:Interaction.Triggers>
								<i:EventTrigger EventName="MouseLeftButtonUp">
										<i:InvokeCommandAction Command="{Binding ToMusicListCommand}" />
								</i:EventTrigger>
						</i:Interaction.Triggers>
				</Image>
				<Slider HorizontalAlignment="Left"
								Margin="-34.9,0,0,66.5"
								Style="{DynamicResource MySimpleSlider}"
								VerticalAlignment="Center"
								Grid.Column="1"
								Height="49"
								Width="269.7"
								Grid.Row="1"
								Background="#FFFFD200"
								Value="{Binding Player.Position.TotalSeconds, Mode=OneWay}"
								Maximum="{Binding CurrentMusic.Duration.TotalSeconds, Mode=OneWay}"
								IsEnabled="False" />
				<StackPanel Grid.Column="1"
										Margin="-53.561,41.75,0,23.75"
										Grid.Row="1"
										Orientation="Horizontal"
										HorizontalAlignment="Left">
						<StackPanel.Background>
								<ImageBrush ImageSource="/MusicPlayer;component/Pic/音乐播放条背景.png" />
						</StackPanel.Background>
						<ToggleButton Content="ToggleButton"
													Style="{DynamicResource ToggleButtonStyle}"
													IsChecked="{Binding IsShuffe, Mode=TwoWay}">
								<ToggleButton.BorderBrush>
										<ImageBrush ImageSource="/MusicPlayer;component/Pic/随机Hover.png" />
								</ToggleButton.BorderBrush>
								<ToggleButton.Background>
										<ImageBrush ImageSource="/MusicPlayer;component/Pic/Shuffle 48x48.png" />
								</ToggleButton.Background>
						</ToggleButton>
						<Button Content="Button"
										Style="{DynamicResource MusicControlbutton}"
										Foreground="{x:Null}"
										Command="{Binding PreviousCommand}">
								<Button.BorderBrush>
										<ImageBrush ImageSource="/MusicPlayer;component/Pic/上一曲Hover.png" />
								</Button.BorderBrush>
								<Button.Background>
										<ImageBrush ImageSource="/MusicPlayer;component/Pic/Navigation first 48x48.png" />
								</Button.Background>
						</Button>
						<Grid Margin="20,0,0,0"
									Width="35"
									Height="35">
								<i:Interaction.Behaviors>
										<ei:DataStateBehavior Binding="{Binding IsPlaying}"
																					Value="true"
																					TrueState="False"
																					FalseState="True" />
								</i:Interaction.Behaviors>
								<Button x:Name="PlayBtn"
												Content="Button"
												Style="{DynamicResource MusicControlbutton}"
												Foreground="{x:Null}"
												Command="{Binding PlayCommand}"
												Width="Auto"
												Height="Auto"
												Margin="0"
												Opacity="0">
										<Button.BorderBrush>
												<ImageBrush ImageSource="/MusicPlayer;component/Pic/播放Hover.png"
																		Stretch="Uniform" />
										</Button.BorderBrush>
										<Button.Background>
												<ImageBrush ImageSource="/MusicPlayer;component/Pic/Navigation right 48x48.png"
																		Stretch="Uniform" />
										</Button.Background>
								</Button>
								<Button x:Name="PauseBtn"
												Content="Button"
												Style="{DynamicResource MusicControlbutton}"
												Foreground="{x:Null}"
												Command="{Binding PauseCommand}"
												Width="Auto"
												Height="Auto"
												Margin="0"
												Opacity="0">
										<Button.BorderBrush>
												<ImageBrush ImageSource="/MusicPlayer;component/Pic/暂停Hover.png"
																		Stretch="Uniform" />
										</Button.BorderBrush>
										<Button.Background>
												<ImageBrush ImageSource="/MusicPlayer;component/Pic/Pause 48x48.png"
																		Stretch="Uniform" />
										</Button.Background>
								</Button>
						</Grid>
						<Button Content="Button"
										Style="{DynamicResource MusicControlbutton}"
										Foreground="{x:Null}"
										Command="{Binding NextCommand}">
								<Button.Background>
										<ImageBrush ImageSource="/MusicPlayer;component/Pic/Navigation last 48x48.png" />
								</Button.Background>
								<Button.BorderBrush>
										<ImageBrush ImageSource="/MusicPlayer;component/Pic/下一曲Hover.png" />
								</Button.BorderBrush>
						</Button>
						<ToggleButton Content="ToggleButton"
													Style="{DynamicResource ToggleButtonStyle}"
													d:LayoutOverrides="Width"
													IsChecked="{Binding IsSigle, Mode=TwoWay}"
													Margin="20,0"
													Height="43"
													Width="43">
								<ToggleButton.BorderBrush>
										<ImageBrush ImageSource="/MusicPlayer;component/Pic/循环(hover).png" />
								</ToggleButton.BorderBrush>
								<ToggleButton.Background>
										<ImageBrush ImageSource="/MusicPlayer;component/Pic/Repeat-white 48x48.png" />
								</ToggleButton.Background>
						</ToggleButton>
				</StackPanel>
		</Grid>
</UserControl>
