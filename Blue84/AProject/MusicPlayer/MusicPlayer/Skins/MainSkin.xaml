<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" mc:Ignorable="d" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions">
	
	<Style x:Key="MySimpleScrollRepeatButtonStyle" d:IsControlPart="True" TargetType="{x:Type RepeatButton}">
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid>
						<Rectangle VerticalAlignment="Center" Height="6" Margin="4,0,-11,0" RadiusY="3" RadiusX="3">
							<Rectangle.Fill>
								<LinearGradientBrush EndPoint="0.025,0.527" StartPoint="0.864,0.568">
									<GradientStop Color="#FFE9C101" Offset="0"/>
									<GradientStop Color="#FFE7BE00" Offset="0.11"/>
									<GradientStop Color="#00AF9400" Offset="1"/>
									<GradientStop Color="#4FC4A400" Offset="0.614"/>
								</LinearGradientBrush>
							</Rectangle.Fill></Rectangle>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="MySimpleScrollRepeatButtonStyle2" d:IsControlPart="True" TargetType="{x:Type RepeatButton}">
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid>
						<Rectangle VerticalAlignment="Center" Height="6" Margin="-11,0,4,0" RadiusY="3" RadiusX="3">
							<Rectangle.Fill>
								<LinearGradientBrush EndPoint="0.025,0.527" StartPoint="0.864,0.568">
									<GradientStop Color="#FFE9C101" Offset="1"/>
									<GradientStop Color="#FFE7BE00" Offset="0.89"/>
									<GradientStop Color="#00AF9400" Offset="0"/>
									<GradientStop Color="#4FC4A400" Offset="0.386"/>
								</LinearGradientBrush>
							</Rectangle.Fill></Rectangle>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
		<Style x:Key="MySimpleSliderThumb" d:IsControlPart="True" TargetType="{x:Type Thumb}">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="Height" Value="14"/>
		<Setter Property="Width" Value="14"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="OnMouseEnter1">
							<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="Ellipse">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid Background="#00000000">
						<Ellipse x:Name="Ellipse" StrokeThickness="0.5" Visibility="Hidden" >
							<Ellipse.Fill>
								<RadialGradientBrush>
									<GradientStop Color="#FFFFDB09" Offset="0.009"/>
									<GradientStop Color="#EBE7BE00" Offset="0.481"/>
									<GradientStop Color="#28AF9400" Offset="0.839"/>
									<GradientStop Color="#00AF9400" Offset="1"/>
									<GradientStop Color="#08AF9400" Offset="0.928"/>
									<GradientStop Color="#62C4A400" Offset="0.7"/>
								</RadialGradientBrush>
							</Ellipse.Fill>
							
						</Ellipse>
						<Ellipse Margin="8" Fill="#FFE9C101" Stroke="{x:Null}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="Mouse.MouseLeave">
							<RemoveStoryboard BeginStoryboardName="OnMouseEnter1_BeginStoryboard"/>
						</EventTrigger>
						<EventTrigger RoutedEvent="Mouse.MouseEnter">
							<BeginStoryboard x:Name="OnMouseEnter1_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter1}"/>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
		<Style x:Key="MySimpleSlider" TargetType="{x:Type Slider}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Slider}">
					<Grid x:Name="GridRoot">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<Rectangle RadiusY="7" RadiusX="7" Fill="#72000000" Grid.RowSpan="2" Visibility="Hidden"/>
						<!-- TickBar shows the ticks for Slider -->
						<TickBar Visibility="Collapsed" x:Name="TopTick" Height="4" SnapsToDevicePixels="True" Placement="Top"/>
						<Border Grid.Row="1" Margin="4,0" x:Name="Border" Height="6" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" Background="Black"/>
						
						<!-- The Track lays out the repeat buttons and thumb -->
						<Track Grid.Row="1" x:Name="PART_Track" Height="{TemplateBinding Height}">
							
							<Track.IncreaseRepeatButton>
								<RepeatButton Style="{DynamicResource MySimpleScrollRepeatButtonStyle2}" Command="Slider.IncreaseLarge"/>
							</Track.IncreaseRepeatButton>
							<Track.DecreaseRepeatButton>
								<RepeatButton Style="{DynamicResource MySimpleScrollRepeatButtonStyle}" Command="Slider.DecreaseLarge"/>
							</Track.DecreaseRepeatButton>
							<Track.Thumb>
								<Thumb Style="{DynamicResource MySimpleSliderThumb}" Height="30" Width="30"/>
							</Track.Thumb>
						</Track>
						
						<TickBar Visibility="Collapsed" Grid.Row="2" x:Name="BottomTick" Height="4" SnapsToDevicePixels="True" Placement="Bottom" Fill="{TemplateBinding Foreground}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="TickPlacement" Value="TopLeft">
							<Setter Property="Visibility" Value="Visible" TargetName="TopTick"/>
						</Trigger>
						<Trigger Property="TickPlacement" Value="BottomRight">
							<Setter Property="Visibility" Value="Visible" TargetName="BottomTick"/>
						</Trigger>
						<Trigger Property="TickPlacement" Value="Both">
							<Setter Property="Visibility" Value="Visible" TargetName="TopTick"/>
							<Setter Property="Visibility" Value="Visible" TargetName="BottomTick"/>
						</Trigger>
						<!-- Use a rotation to create a Vertical Slider form the default Horizontal -->
						<Trigger Property="Orientation" Value="Vertical">
							<Setter Property="LayoutTransform" TargetName="GridRoot">
								<Setter.Value>
									<RotateTransform Angle="-90"/>
								</Setter.Value>
							</Setter>
							<!-- Track rotates itself based on orientation so need to force it back -->
							<Setter TargetName="PART_Track" Property="Orientation" Value="Horizontal"/>
						</Trigger>
						
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	
	<ItemsPanelTemplate x:Key="WarpListBoxTemplate">
		<WrapPanel ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto"/>
	</ItemsPanelTemplate>
	<Style x:Key="ButtonFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#F3F3F3" Offset="0"/>
		<GradientStop Color="#EBEBEB" Offset="0.5"/>
		<GradientStop Color="#DDDDDD" Offset="0.5"/>
		<GradientStop Color="#CDCDCD" Offset="1"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
		
	<Style x:Key="ImageButton" TargetType="{x:Type Button}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
		<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid Height="100">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" MinHeight="73.038"/>
							<RowDefinition Height="*"/>
						</Grid.RowDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.3"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Pressed"/>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.3"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="Focused">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HoverImage">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid"/>
								<VisualState x:Name="InvalidFocused"/>
								<VisualState x:Name="InvalidUnfocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter HorizontalAlignment="Center" Margin="0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Top" Grid.Row="1" d:LayoutOverrides="Width, Height"/>
						<Rectangle x:Name="NomalImage" Stroke="Black" Fill="{TemplateBinding Background}" Grid.RowSpan="1" StrokeThickness="0"/>
						<Rectangle x:Name="HoverImage" Fill="{TemplateBinding BorderBrush}" Stroke="Black" Grid.RowSpan="1" Opacity="0" StrokeThickness="0"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Margin" Value="20,0,0,0"/>
	</Style>
	<Color x:Key="LightYellow">#19FFD200</Color>
	<DataTemplate x:Key="PlayInfoTemplate">
		<Grid d:DesignWidth="405" d:DesignHeight="49" Width="440" Margin="2">
			<Grid.Background>
				<SolidColorBrush Color="{DynamicResource LightYellow}"/>
			</Grid.Background>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="0.7*"/>
				<ColumnDefinition Width="0.3*"/>
			</Grid.ColumnDefinitions>
			<Label Content="{Binding Title, FallbackValue=歌曲名称}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="20,0,0,0" FontSize="18.667"/>
			<Label Content="{Binding Artist, FallbackValue=未知歌手}" Grid.Column="1" HorizontalAlignment="Left" Margin="20.815,8,18,8" VerticalAlignment="Center" FontSize="16"/>
		</Grid>
	</DataTemplate>
	<Style x:Key="MusicControlbutton" TargetType="{x:Type Button}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
		<Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
		<Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HoverImage">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.1"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="Focused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="NomalImage" Fill="{TemplateBinding Background}" Stroke="Black" StrokeThickness="0" RadiusX="5" RadiusY="5"/>
						<Rectangle x:Name="HoverImage" Fill="{TemplateBinding BorderBrush}" Stroke="Black" Opacity="0" StrokeThickness="0" RadiusX="5" RadiusY="5"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Margin" Value="20,0,0,0"/>
		<Setter Property="Width" Value="35"/>
		<Setter Property="Height" Value="35"/>
	</Style>
		<Style x:Key="BackButtonStyle" TargetType="{x:Type Button}">
			<Setter Property="VerticalAlignment" Value="Bottom"/>
			<Setter Property="Width" Value="119.9"/>
			<Setter Property="HorizontalAlignment" Value="Left"/>
			<Setter Property="Height" Value="58.8"/>
			<Setter Property="Margin" Value="0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid Background="#00000000">
							<Border CornerRadius="0,12,12,0" Margin="0,10,39,4">
								<Border.Background>
									<LinearGradientBrush EndPoint="0.993,0.539" StartPoint="0.053,0.534">
										<GradientStop Color="#FF321702" Offset="0.016"/>
										<GradientStop Color="#FF905706" Offset="0.844"/>
										<GradientStop Color="#FF905F1A" Offset="1"/>
									</LinearGradientBrush>
								</Border.Background>
								<ContentPresenter Margin="0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" d:LayoutOverrides="Width, Height" VerticalAlignment="Center" HorizontalAlignment="Center"/>
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="FontFamily" Value="黑体"/>
			<Setter Property="FontSize" Value="20"/>
			<Setter Property="Foreground" Value="#FFE9E9E9"/>
		</Style>
		<Style x:Key="ListButtonStyle" TargetType="{x:Type Button}">
			<Setter Property="VerticalAlignment" Value="Bottom"/>
			<Setter Property="Width" Value="119.9"/>
			<Setter Property="HorizontalAlignment" Value="right"/>
			<Setter Property="Height" Value="58.8"/>
			<Setter Property="Margin" Value="0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Grid Background="#00000000">
							<Border CornerRadius="12,0,0,12" Margin="39,10,0,4">
								<Border.Background>
									<LinearGradientBrush EndPoint="0.053,0.534" StartPoint="0.946,0.52">
										<GradientStop Color="#FF321702" Offset="0.016"/>
										<GradientStop Color="#FF905706" Offset="0.844"/>
										<GradientStop Color="#FF905F1A" Offset="1"/>
									</LinearGradientBrush>
								</Border.Background>
								<ContentPresenter Margin="0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" d:LayoutOverrides="Width, Height" VerticalAlignment="Center" HorizontalAlignment="Center"/>
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
							<Trigger Property="IsPressed" Value="True"/>
							<Trigger Property="IsEnabled" Value="False"/>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="FontFamily" Value="黑体"/>
			<Setter Property="FontSize" Value="20"/>
			<Setter Property="Foreground" Value="#FFE9E9E9"/>
		</Style>
		<Style x:Key="StateCheckBoxStyle" TargetType="{x:Type CheckBox}">
			<Setter Property="Width" Value="97.9"/>
			<Setter Property="VerticalAlignment" Value="Top"/>
			<Setter Property="Height" Value="48"/>
			<Setter Property="Background" Value="Black"/>
			<Setter Property="IsTabStop" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type CheckBox}">
						<ControlTemplate.Resources>
							<Storyboard x:Key="Storyboard1">
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="GD1">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
								</ObjectAnimationUsingKeyFrames>
								<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="GD2">
									<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
								</ObjectAnimationUsingKeyFrames>
							</Storyboard>
						</ControlTemplate.Resources>
						<Grid Background="#00000000">
							<Grid Margin="14,9,16,10">
								<Grid x:Name="GD1">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="0.5*"/>
										<ColumnDefinition Width="0.5*"/>
									</Grid.ColumnDefinitions>
									<Path Data="M17.062001,17.75 L29.312001,17.75 29.312001,30.417 17.062001,30.417 z M0,17.75 L12.25,17.75 12.25,30.417 0,30.417 z M17.062001,0 L29.312001,0 29.312001,12.667 17.062001,12.667 z M0,0 L12.25,0 12.25,12.667 0,12.667 z" Fill="#FFFFD200" Height="18.25"  Stretch="Fill" StrokeThickness="0" Width="17.979"/>
									<Path Data="M12.709,4.8950006 L35.521,4.8950006 35.521,28.562001 12.709,28.562001 z M37.459,2.7950005 L40.459,2.7950005 40.459,30.295001 37.459,30.295001 z M6.3759995,2.7950005 L9.3759995,2.7950005 9.3759995,30.295001 6.3759995,30.295001 z M0,7.0844591E-07 L2.3759995,7.0844591E-07 2.3759995,34.000001 0,34.000001 z M45.167,0 L47.543,0 47.543,34.000001 45.167,34.000001 z" Fill="#FF5C2D06" Height="18.25"  Stretch="Fill" StrokeThickness="0"  Width="21.543" Grid.Column="1"/>
								</Grid>
								<Grid x:Name="GD2" Visibility="Collapsed">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="0.5*"/>
										<ColumnDefinition Width="0.5*"/>
									</Grid.ColumnDefinitions>
									<Path Data="M17.062001,17.75 L29.312001,17.75 29.312001,30.417 17.062001,30.417 z M0,17.75 L12.25,17.75 12.25,30.417 0,30.417 z M17.062001,0 L29.312001,0 29.312001,12.667 17.062001,12.667 z M0,0 L12.25,0 12.25,12.667 0,12.667 z" Fill="#FF5C2D06" Height="18.25"  Stretch="Fill" StrokeThickness="0" Width="17.979"/>
									<Path Data="M12.709,4.8950006 L35.521,4.8950006 35.521,28.562001 12.709,28.562001 z M37.459,2.7950005 L40.459,2.7950005 40.459,30.295001 37.459,30.295001 z M6.3759995,2.7950005 L9.3759995,2.7950005 9.3759995,30.295001 6.3759995,30.295001 z M0,7.0844591E-07 L2.3759995,7.0844591E-07 2.3759995,34.000001 0,34.000001 z M45.167,0 L47.543,0 47.543,34.000001 45.167,34.000001 z" Fill="#FFFFD200" Height="18.25"  Stretch="Fill" StrokeThickness="0"  Width="21.543" Grid.Column="1"/>
								</Grid>
							</Grid>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="True">
								<Trigger.EnterActions>
									<BeginStoryboard x:Name="Storyboard1_BeginStoryboard" Storyboard="{StaticResource Storyboard1}"/>
								</Trigger.EnterActions>
							</Trigger>
							<Trigger Property="IsChecked" Value="False">
								<Trigger.EnterActions>
									<RemoveStoryboard BeginStoryboardName="Storyboard1_BeginStoryboard"/>
								</Trigger.EnterActions>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Color x:Key="HeightYellowBrush">#BFFFD200</Color>
		<Style x:Key="DirListstyle" TargetType="{x:Type ListBoxItem}">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
			<Setter Property="Padding" Value="2,0,0,0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<Grid Height="Auto" Width="Auto">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Unselected"/>
									<VisualState x:Name="Selected">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Bd">
												<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
												<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="SelectedUnfocused">
										<Storyboard>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Bd">
												<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
											</DoubleAnimationUsingKeyFrames>
											<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
												<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
											</DoubleAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" Opacity="0.75" d:LayoutOverrides="Width, Height" Margin="2">
								<Border.Background>
									<SolidColorBrush Color="{DynamicResource LightYellow}"/>
								</Border.Background>
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
							</Border>
							<Rectangle x:Name="rectangle" Stroke="Black" StrokeThickness="0" Margin="2" Panel.ZIndex="-1" Opacity="0">
								<Rectangle.Fill>
									<SolidColorBrush Color="{DynamicResource HeightYellowBrush}"/>
								</Rectangle.Fill>
							</Rectangle>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="MusicSlider" TargetType="{x:Type Slider}">
		<Setter Property="Background" Value="White"/>
		<Setter Property="BorderBrush" Value="Black"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Slider}">
					<Grid x:Name="GridRoot">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						
						<!-- TickBar shows the ticks for Slider -->
						<Border Grid.Row="1" Margin="0" x:Name="Border" Height="4" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2">
							<Border.Effect>
								<BlurEffect Radius="3"/>
							</Border.Effect>
						</Border>
						
						<!-- The Track lays out the repeat buttons and thumb -->
						<Track Grid.Row="1" x:Name="PART_Track">
							<Track.Thumb>
								<Thumb Style="{DynamicResource SimpleSliderThumb}" Background="#FFFADB4B">
									<Thumb.Effect>
										<BlurEffect/>
									</Thumb.Effect>
								</Thumb>
							</Track.Thumb>
							<Track.IncreaseRepeatButton>
								<RepeatButton Style="{DynamicResource SimpleScrollRepeatButtonStyle}" Command="Slider.IncreaseLarge"/>
							</Track.IncreaseRepeatButton>
							<Track.DecreaseRepeatButton>
								<RepeatButton Style="{DynamicResource SimpleScrollRepeatButtonStyle}" Command="Slider.DecreaseLarge"/>
							</Track.DecreaseRepeatButton>
						</Track>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="TickPlacement" Value="TopLeft"/>
						<Trigger Property="TickPlacement" Value="BottomRight"/>
						<Trigger Property="TickPlacement" Value="Both"/>
						
						<!-- Use a rotation to create a Vertical Slider form the default Horizontal -->
						<Trigger Property="Orientation" Value="Vertical">
							<Setter Property="LayoutTransform" TargetName="GridRoot">
								<Setter.Value>
									<RotateTransform Angle="-90"/>
								</Setter.Value>
							</Setter>
							<!-- Track rotates itself based on orientation so need to force it back -->
							<Setter TargetName="PART_Track" Property="Orientation" Value="Horizontal"/>
						</Trigger>
						
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
		<Style x:Key="SimpleSliderThumb" d:IsControlPart="True" TargetType="{x:Type Thumb}">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="Height" Value="14"/>
		<Setter Property="Width" Value="14"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Grid>
						<Ellipse x:Name="Ellipse" Stroke="White" StrokeThickness="1" Fill="{TemplateBinding Background}">
							<Ellipse.OpacityMask>
								<RadialGradientBrush>
									<GradientStop Color="Black" Offset="0.526"/>
									<GradientStop Color="Transparent" Offset="1"/>
								</RadialGradientBrush>
							</Ellipse.OpacityMask>
						</Ellipse>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="SimpleScrollRepeatButtonStyle" d:IsControlPart="True" TargetType="{x:Type RepeatButton}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid>
						<Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<SolidColorBrush x:Key="ForgroundWhite" Color="#FFF0F0F0"/>
	<ItemsPanelTemplate x:Key="WrapItemsPanelTemplate">
		<WrapPanel IsItemsHost="True"/>
	</ItemsPanelTemplate>
	<SolidColorBrush x:Key="CheckBoxFillNormal" Color="#F4F4F4"/>
	<SolidColorBrush x:Key="CheckBoxStroke" Color="#8E8F8F"/>
	<Style x:Key="EmptyCheckBoxFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="1" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="CheckRadioFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
			<Style x:Key="ScrollBarButton"
					 TargetType="{x:Type RepeatButton}">
				<Setter Property="OverridesDefaultStyle"
								Value="true" />
				<Setter Property="Focusable"
								Value="false" />
				<Setter Property="IsTabStop"
								Value="false" />
		</Style>
		<Style x:Key="ScrollBarThumb"
					 TargetType="{x:Type Thumb}">
				<Setter Property="OverridesDefaultStyle"
								Value="true" />
				<Setter Property="IsTabStop"
								Value="false" />
				<Setter Property="Template">
						<Setter.Value>
								<ControlTemplate TargetType="{x:Type Thumb}">
										<Grid Margin="3,0" d:DesignWidth="11.5" d:DesignHeight="19.583">
												<Rectangle Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
																	 RadiusX="6"
																	 RadiusY="6"
																	 Margin="0"
																	 Height="Auto"
																	 Width="Auto" />
												<Path Data="M0.43846154,0.43220339 L3.8365385,5.9427966 6.6865385,0.43220339"
															Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
															Height="Auto"
															Stretch="None"
															Width="Auto"
															Stroke="#FF646464"
															StrokeDashCap="Square"
															StrokeLineJoin="Round"
															StrokeMiterLimit="14"
															ClipToBounds="False"
															StrokeThickness="1"
															Margin="0,3.557,0,0"
															VerticalAlignment="Top" HorizontalAlignment="Center" Visibility="Hidden" />
												<Path Data="M0.43846154,0.43220339 L3.8365385,5.9427966 6.6865385,0.43220339"
															Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
															Height="Auto"
															Stretch="None"
															Width="Auto"
															Stroke="#FF646464"
															StrokeDashCap="Square"
															StrokeLineJoin="Round"
															StrokeMiterLimit="14"
															ClipToBounds="False"
															StrokeThickness="1"
															Margin="0,0,0,3.557"
															VerticalAlignment="Bottom"
															RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" Visibility="Hidden">
														<Path.RenderTransform>
																<TransformGroup>
																		<ScaleTransform ScaleY="-1"
																										ScaleX="1" />
																		<SkewTransform AngleY="0"
																									 AngleX="0" />
																		<RotateTransform Angle="0" />
																		<TranslateTransform />
																</TransformGroup>
														</Path.RenderTransform>
												</Path>
										</Grid>
								</ControlTemplate>
						</Setter.Value>
				</Setter>
		</Style>
		<LinearGradientBrush x:Key="HorizontalScrollBarBackground"
												 EndPoint="0,1"
												 StartPoint="0,0">
				<GradientStop Color="#E1E1E1"
											Offset="0" />
				<GradientStop Color="#EDEDED"
											Offset="0.20" />
				<GradientStop Color="#EDEDED"
											Offset="0.80" />
				<GradientStop Color="#E3E3E3"
											Offset="1" />
		</LinearGradientBrush>
	<Style x:Key="ListSelectCheckBox" TargetType="{x:Type CheckBox}">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Background" Value="{StaticResource CheckBoxFillNormal}"/>
		<Setter Property="BorderBrush" Value="{StaticResource CheckBoxStroke}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="FocusVisualStyle" Value="{StaticResource EmptyCheckBoxFocusVisual}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<Grid Height="Auto" Width="Auto">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" MinHeight="73.038"/>
							<RowDefinition Height="Auto" MinHeight="30.962"/>
						</Grid.RowDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.3"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Pressed"/>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.3"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="Focused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid"/>
								<VisualState x:Name="InvalidFocused"/>
								<VisualState x:Name="InvalidUnfocused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="HoverImage">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked"/>
								<VisualState x:Name="Indeterminate"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ContentPresenter HorizontalAlignment="Center" Margin="0" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Top" Grid.Row="1" d:LayoutOverrides="Width, Height"/>
						<Rectangle x:Name="NomalImage" Stroke="Black" Fill="{TemplateBinding Background}" Grid.RowSpan="1" StrokeThickness="0"/>
						<Rectangle x:Name="HoverImage" Fill="{TemplateBinding BorderBrush}" Stroke="Black" Grid.RowSpan="1" Opacity="0" StrokeThickness="0"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="FontSize" Value="16"/>
		<Setter Property="Margin" Value="20,0,0,0"/>
		<Setter Property="Width" Value="75"/>
		<Setter Property="FontFamily" Value="黑体"/>
	</Style>
	<Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid x:Name="grid" Margin="0" Width="Auto" Height="Auto" Background="#00000000">
						<VisualStateManager.CustomVisualStateManager>
							<ei:ExtendedVisualStateManager/>
						</VisualStateManager.CustomVisualStateManager>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CheckStates" ei:ExtendedVisualStateManager.UseFluidLayout="True">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0:0:0.1"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="rectangle">
											<EasingDoubleKeyFrame KeyTime="0" Value="1"/>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked"/>
								<VisualState x:Name="Indeterminate"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Unfocused"/>
								<VisualState x:Name="Focused"/>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal"/>
								<VisualState x:Name="MouseOver"/>
								<VisualState x:Name="Pressed"/>
								<VisualState x:Name="Disabled"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle Fill="{TemplateBinding Background}" RadiusY="5" RadiusX="5" StrokeThickness="0"/>
						<Rectangle x:Name="rectangle" Fill="{TemplateBinding BorderBrush}" RadiusY="5" RadiusX="5" StrokeThickness="0" Opacity="0"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Width" Value="35"/>
		<Setter Property="Height" Value="35"/>
		<Setter Property="Margin" Value="20,0,0,0"/>
	</Style>
		 <Style x:Key="ScrollBarStyle"
					 TargetType="{x:Type ScrollBar}">
				<Setter Property="Background" >
					<Setter.Value>
						<LinearGradientBrush
							EndPoint="1,0"
							StartPoint="0,0">
							<GradientStop Color="#E1E1E1"
								Offset="0" />
							<GradientStop Color="#EDEDED"
								Offset="0.20" />
							<GradientStop Color="#EDEDED"
								Offset="0.80" />
							<GradientStop Color="#E3E3E3"
								Offset="1" />
						</LinearGradientBrush>
					</Setter.Value>
				</Setter>
				<Setter Property="Stylus.IsPressAndHoldEnabled"
								Value="false" />
				<Setter Property="Stylus.IsFlicksEnabled"
								Value="false" />
				<Setter Property="Foreground"
								Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
				<Setter Property="Width"
								Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
				<Setter Property="MinWidth"
								Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
				<Setter Property="Template">
						<Setter.Value>
								<ControlTemplate TargetType="{x:Type ScrollBar}">
										<Grid x:Name="Bg"
													Background="Transparent"
													SnapsToDevicePixels="true"
													Margin="0,0,0,-1">
												<Grid.RowDefinitions>
														<RowDefinition Height="0.00001*" />
												</Grid.RowDefinitions>
												<Rectangle Fill="#72000000"
																	 Height="Auto"
																	 RadiusY="7"
																	 RadiusX="7"
																	 VerticalAlignment="Stretch" />
												<Border BorderBrush="Black"
																BorderThickness="0"
																CornerRadius="5"
																Margin="4,3">
														<Border.Background>
																<LinearGradientBrush EndPoint="1.04,0.808"
																										 StartPoint="-0.098,0.808">
																		<GradientStop Color="#FF92959A"
																									Offset="0.083" />
																		<GradientStop Color="#FF7A7A82"
																									Offset="0.111" />
																		<GradientStop Color="#FF7A7A82"
																									Offset="0.194" />
																		<GradientStop Color="#FF636469"
																									Offset="0.222" />
																		<GradientStop Color="#FF242623"
																									Offset="0.972" />
																</LinearGradientBrush>
														</Border.Background>
												</Border>
												<Track x:Name="PART_Track"
															 IsDirectionReversed="true"
															 IsEnabled="{TemplateBinding IsMouseOver}"
															 Grid.Row="1">
														<Track.DecreaseRepeatButton>
																<RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" >
																	<RepeatButton.Style>
																		<Style
																			TargetType="{x:Type RepeatButton}">
																			<Setter Property="OverridesDefaultStyle"
																				Value="true" />
																			<Setter Property="Background"
																				Value="Transparent" />
																			<Setter Property="Focusable"
																				Value="false" />
																			<Setter Property="IsTabStop"
																				Value="false" />
																			<Setter Property="Template">
																				<Setter.Value>
																					<ControlTemplate TargetType="{x:Type RepeatButton}">
																						<Rectangle Fill="{TemplateBinding Background}"
																							Height="{TemplateBinding Height}"
																							Width="{TemplateBinding Width}" />
																					</ControlTemplate>
																				</Setter.Value>
																			</Setter>
																		</Style>
																	</RepeatButton.Style>
																</RepeatButton>
														</Track.DecreaseRepeatButton>
														<Track.IncreaseRepeatButton>
																<RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" >
																	<RepeatButton.Style>
																		<Style
																			TargetType="{x:Type RepeatButton}">
																			<Setter Property="OverridesDefaultStyle"
																				Value="true" />
																			<Setter Property="Background"
																				Value="Transparent" />
																			<Setter Property="Focusable"
																				Value="false" />
																			<Setter Property="IsTabStop"
																				Value="false" />
																			<Setter Property="Template">
																				<Setter.Value>
																					<ControlTemplate TargetType="{x:Type RepeatButton}">
																						<Rectangle Fill="{TemplateBinding Background}"
																							Height="{TemplateBinding Height}"
																							Width="{TemplateBinding Width}" />
																					</ControlTemplate>
																				</Setter.Value>
																			</Setter>
																		</Style>
																	</RepeatButton.Style>
																</RepeatButton>
														</Track.IncreaseRepeatButton>
														<Track.Thumb>
																<Thumb Style="{StaticResource ScrollBarThumb}"
															 Margin="0" />
														</Track.Thumb>
												</Track>
										</Grid>
										<ControlTemplate.Triggers>
												<Trigger Property="IsEnabled"
																 Value="false">
														<Setter Property="Background"
																		TargetName="Bg"
																		Value="#F4F4F4" />
												</Trigger>
										</ControlTemplate.Triggers>
								</ControlTemplate>
						</Setter.Value>
				</Setter>
				<Style.Triggers>
						<Trigger Property="Orientation"
										 Value="Horizontal">
								<Setter Property="Width"
												Value="Auto" />
								<Setter Property="MinWidth"
												Value="0" />
								<Setter Property="Height"
												Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
								<Setter Property="MinHeight"
												Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}" />
								<Setter Property="Background"
												Value="{StaticResource HorizontalScrollBarBackground}" />
								<Setter Property="Template">
										<Setter.Value>
												<ControlTemplate TargetType="{x:Type ScrollBar}">
														<Grid x:Name="Bg"
																	Background="{TemplateBinding Background}"
																	SnapsToDevicePixels="true">
																<Grid.ColumnDefinitions>
																		<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
																		<ColumnDefinition Width="0.00001*" />
																		<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" />
																</Grid.ColumnDefinitions>
																<RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}"
																							IsEnabled="{TemplateBinding IsMouseOver}"
																							Style="{StaticResource ScrollBarButton}"
																							 />
																<Track x:Name="PART_Track"
																			 Grid.Column="1"
																			 IsEnabled="{TemplateBinding IsMouseOver}">
																		<Track.DecreaseRepeatButton>
																				<RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" >
																					<RepeatButton.Style>
																						<Style
																							TargetType="{x:Type RepeatButton}">
																							<Setter Property="OverridesDefaultStyle"
																								Value="true" />
																							<Setter Property="Background"
																								Value="Transparent" />
																							<Setter Property="Focusable"
																								Value="false" />
																							<Setter Property="IsTabStop"
																								Value="false" />
																							<Setter Property="Template">
																								<Setter.Value>
																									<ControlTemplate TargetType="{x:Type RepeatButton}">
																										<Rectangle Fill="{TemplateBinding Background}"
																											Height="{TemplateBinding Height}"
																											Width="{TemplateBinding Width}" />
																									</ControlTemplate>
																								</Setter.Value>
																							</Setter>
																						</Style>
																					</RepeatButton.Style>
																				</RepeatButton>
																		</Track.DecreaseRepeatButton>
																		<Track.IncreaseRepeatButton>
																				<RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" >
																					<RepeatButton.Style>
																						<Style
																							TargetType="{x:Type RepeatButton}">
																							<Setter Property="OverridesDefaultStyle"
																								Value="true" />
																							<Setter Property="Background"
																								Value="Transparent" />
																							<Setter Property="Focusable"
																								Value="false" />
																							<Setter Property="IsTabStop"
																								Value="false" />
																							<Setter Property="Template">
																								<Setter.Value>
																									<ControlTemplate TargetType="{x:Type RepeatButton}">
																										<Rectangle Fill="{TemplateBinding Background}"
																											Height="{TemplateBinding Height}"
																											Width="{TemplateBinding Width}" />
																									</ControlTemplate>
																								</Setter.Value>
																							</Setter>
																						</Style>
																					</RepeatButton.Style>
																				</RepeatButton>
																		</Track.IncreaseRepeatButton>
																		<Track.Thumb>
																				<Thumb Style="{StaticResource ScrollBarThumb}"
																								/>
																		</Track.Thumb>
																</Track>
																<RepeatButton Grid.Column="2"
																							Command="{x:Static ScrollBar.LineRightCommand}"
																							IsEnabled="{TemplateBinding IsMouseOver}"
																							Style="{StaticResource ScrollBarButton}"
																							 />
														</Grid>
														<ControlTemplate.Triggers>
																<Trigger Property="IsEnabled"
																				 Value="false">
																		<Setter Property="Background"
																						TargetName="Bg"
																						Value="#F4F4F4" />
																</Trigger>
														</ControlTemplate.Triggers>
												</ControlTemplate>
										</Setter.Value>
								</Setter>
						</Trigger>
				</Style.Triggers>
		</Style>
		 <SolidColorBrush x:Key="ListBorder" Color="#828790"/>
		 <Style x:Key="ListBoxStyle" TargetType="{x:Type ListBox}">
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
			<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
			<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBox}">
						<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
							<ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}" Template="{DynamicResource ScrollViewerControlTemplate}">
								<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</ScrollViewer>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
							</Trigger>
							<Trigger Property="IsGrouping" Value="true">
								<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		 </Style>
		 <ControlTemplate x:Key="ScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
			<Grid x:Name="Grid" Background="{TemplateBinding Background}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>
				<Grid.RowDefinitions>
					<RowDefinition Height="*"/>
					<RowDefinition Height="Auto"/>
				</Grid.RowDefinitions>
				<Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
				<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0" Grid.ColumnSpan="2"/>
				<ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource ScrollBarStyle}"/>
				<ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
			</Grid>
		 </ControlTemplate>
</ResourceDictionary>