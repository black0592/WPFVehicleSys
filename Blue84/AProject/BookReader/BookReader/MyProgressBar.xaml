<UserControl
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="d"
	x:Class="BookReader.MyProgressBar"
	x:Name="UserControl"
	d:DesignWidth="28" d:DesignHeight="421">
	<UserControl.Resources>
		<LinearGradientBrush x:Key="LColorDarkLight" EndPoint=".7,1" StartPoint=".7,0">
	        <GradientStop Color="#FFAADF0B" Offset="0.43"/>
	        <GradientStop Color="#FFFFFC4E" Offset="1"/>
	        <GradientStop Color="#FF97CA00" Offset="0.17"/>
	    </LinearGradientBrush>
	    <SolidColorBrush x:Key="PBorderDark" Color="#FF68615B"/>
	    <SolidColorBrush x:Key="PBorderLight" Color="#FF968481"/>
	    <SolidColorBrush x:Key="PFocusColor" Color="#FFCCBFB6"/>
	    <LinearGradientBrush x:Key="PFillBrush" EndPoint="0.64,0.88" StartPoint="0.62,0.15">
	        <GradientStop Color="#FFB3A09D" Offset="0"/>
	        <GradientStop Color="#FFE7DED7" Offset="1"/>
	    </LinearGradientBrush>
	    <LinearGradientBrush x:Key="PColorDarkLight" EndPoint=".7,1" StartPoint=".7,0">
	        <GradientStop Color="#FF968481" Offset="0.125"/>
	        <GradientStop Color="#FFCCBFB6" Offset="1"/>
	    </LinearGradientBrush>
	    <LinearGradientBrush x:Key="PColorDarkLightOver" EndPoint=".7,1" StartPoint=".7,0">
	        <GradientStop Color="#FF968481" Offset="0"/>
	        <GradientStop Color="#FFCCBFB6" Offset="0.7"/>
	    </LinearGradientBrush>
	    <LinearGradientBrush x:Key="PLightBack" EndPoint=".7,1" StartPoint=".7,0">
	        <GradientStop Color="#FFFFFFFF" Offset="0"/>
	        <GradientStop Color="#FFCCBFB6" Offset="1"/>
	    </LinearGradientBrush>
	    <LinearGradientBrush x:Key="PLightBackDown" EndPoint="0.7,0" StartPoint="0.7,1">
	        <GradientStop Color="#FFFFFFFF"/>
	        <GradientStop Color="#FFCCBFB6" Offset="1"/>
	    </LinearGradientBrush>
	    <LinearGradientBrush x:Key="PLightVertical" EndPoint="0,0.5" StartPoint="1,0.5">
	        <GradientStop Color="#FFFFFFFF" Offset="0"/>
	        <GradientStop Color="#FFCCBFB6" Offset="1"/>
	    </LinearGradientBrush>
	    <LinearGradientBrush x:Key="PSlideHorisontal" EndPoint="1,0.5" StartPoint="0,0.5">
	        <GradientStop Color="#FFB3A09D"/>
	        <GradientStop Color="#FFE7DED7" Offset="1"/>
	    </LinearGradientBrush>
	    <SolidColorBrush x:Key="PTextColor" Color="#FF312D29"/>
	    <SolidColorBrush x:Key="LBorderDark" Color="#FF67850F"/>
	    <SolidColorBrush x:Key="LBorderLight" Color="#FF97CA00"/>
	    <SolidColorBrush x:Key="LFocusColor" Color="#FFFFFD7E"/>
	    <LinearGradientBrush x:Key="LFillBrush" EndPoint="0.64,0.88" StartPoint="0.62,0.15">
	        <GradientStop Color="#FFAADF0B" Offset="0"/>
	        <GradientStop Color="#FFFFFD7E" Offset="1"/>
	    </LinearGradientBrush>
	    <LinearGradientBrush x:Key="LColorDarkLightOver" EndPoint=".7,1" StartPoint=".7,0">
	        <GradientStop Color="#FF97CA00" Offset="0"/>
	        <GradientStop Color="#FFFFFD7E" Offset="0.7"/>
	        <GradientStop Color="#FFAADF0B" Offset="0.29499998688697815"/>
	    </LinearGradientBrush>
	    <LinearGradientBrush x:Key="LLightBack" EndPoint=".7,1" StartPoint=".7,0">
	        <GradientStop Color="#FFFFFFFF" Offset="0"/>
	        <GradientStop Color="#FFEBFF7E" Offset="1"/>
	    </LinearGradientBrush>
	    <LinearGradientBrush x:Key="LLightBackDown" EndPoint="0.7,0" StartPoint="0.7,1">
	        <GradientStop Color="#FFFFFFFF"/>
	        <GradientStop Color="#FFE0EF8D" Offset="1"/>
	    </LinearGradientBrush>
	    <LinearGradientBrush x:Key="LLightVertical" EndPoint="0,0.5" StartPoint="1,0.5">
	        <GradientStop Color="#FFFFFFFF" Offset="0"/>
	        <GradientStop Color="#FFEBFF7E" Offset="1"/>
	    </LinearGradientBrush>
	    <LinearGradientBrush x:Key="LSlideHorisontal" EndPoint="1,0.5" StartPoint="0,0.5">
	        <GradientStop Color="#FFAADF0B"/>
	        <GradientStop Color="#FFFFFC4E" Offset="1"/>
	    </LinearGradientBrush>
	    <SolidColorBrush x:Key="LTextColor" Color="#FF67850F"/>
	    <LinearGradientBrush x:Key="NormalBrush" EndPoint="0,1" StartPoint="0,0">
	        <GradientStop Color="#EEE" Offset="0.0"/>
	        <GradientStop Color="#CCC" Offset="1.0"/>
	    </LinearGradientBrush>
	    <LinearGradientBrush x:Key="NormalBorderBrush" EndPoint="0,1" StartPoint="0,0">
	        <GradientStop Color="#CCC" Offset="0.0"/>
	        <GradientStop Color="#444" Offset="1.0"/>
	    </LinearGradientBrush>

	    <!-- LightBrush is used for content areas such as Menu, Tab Control background -->
	    <LinearGradientBrush x:Key="LightBrush" EndPoint="0,1" StartPoint="0,0">
	        <GradientStop Color="#FFF" Offset="0.0"/>
	        <GradientStop Color="#EEE" Offset="1.0"/>
	    </LinearGradientBrush>

	    <!-- MouseOverBrush is used for MouseOver in Button, Radio Button, CheckBox -->
	    <LinearGradientBrush x:Key="MouseOverBrush" EndPoint="0,1" StartPoint="0,0">
	        <GradientStop Color="#FFF" Offset="0.0"/>
	        <GradientStop Color="#AAA" Offset="1.0"/>
	    </LinearGradientBrush>

	    <!-- PressedBrush is used for Pressed in Button, Radio Button, CheckBox -->
	    <LinearGradientBrush x:Key="PressedBrush" EndPoint="0,1" StartPoint="0,0">
	        <GradientStop Color="#BBB" Offset="0.0"/>
	        <GradientStop Color="#EEE" Offset="0.1"/>
	        <GradientStop Color="#EEE" Offset="0.9"/>
	        <GradientStop Color="#FFF" Offset="1.0"/>
	    </LinearGradientBrush>
	    <LinearGradientBrush x:Key="PressedBorderBrush" EndPoint="0,1" StartPoint="0,0">
	        <GradientStop Color="#444" Offset="0.0"/>
	        <GradientStop Color="#888" Offset="1.0"/>
	    </LinearGradientBrush>

	    <!-- SelectedBackgroundBrush is used for the Selected item in ListBoxItem, ComboBoxItem-->
	    <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD"/>

	    <!-- Disabled Brushes are used for the Disabled look of each control -->
	    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888"/>
	    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE"/>
	    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA"/>

	    <!-- Used for background of ScrollViewer, TreeView, ListBox, Expander, TextBox, Tab Control -->
	    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FFF"/>

	    <!-- DefaultedBorderBrush is used to show KeyBoardFocus -->
	    <LinearGradientBrush x:Key="DefaultedBorderBrush" EndPoint="0,1" StartPoint="0,0">
	        <GradientStop Color="#777" Offset="0.0"/>
	        <GradientStop Color="#000" Offset="1.0"/>
	    </LinearGradientBrush>

	    <SolidColorBrush x:Key="SolidBorderBrush" Color="#888"/>
	    <SolidColorBrush x:Key="LightBorderBrush" Color="#AAA"/>
	    <SolidColorBrush x:Key="LightColorBrush" Color="#DDD"/>

	    <!-- Used for Checkmark, Radio button, TreeViewItem, Expander ToggleButton glyphs -->
	    <SolidColorBrush x:Key="GlyphBrush" Color="#444"/>
	    <Style x:Key="MySimpleSliderThumb"  TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Height" Value="14"/>
        <Setter Property="Width" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="00:00:00.1" To="MouseOver"/>
                                    <VisualTransition GeneratedDuration="00:00:00.1" To="Pressed"/>
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="DisabledVisualElement" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Background" Fill="{StaticResource LColorDarkLight}" Stroke="{StaticResource PBorderDark}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                        <Rectangle x:Name="BackgroundAnimation" Opacity="0" Fill="{StaticResource PColorDarkLightOver}" Stroke="{StaticResource LBorderLight}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                        <Rectangle Margin="3,3,3,5" x:Name="BackgroundGradient" StrokeThickness="1">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                    <GradientStop Color="#E5FFFFFF" Offset="0"/>
                                    <GradientStop Color="#44FFFFFF" Offset="0.808"/>
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="DisabledVisualElement" IsHitTestVisible="false" Opacity="0" Fill="#A5FFFFFF"/>
                        <Rectangle x:Name="FocusVisualElement" IsHitTestVisible="false" Visibility="Collapsed" Stroke="{StaticResource LBorderLight}" StrokeThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MySimpleScrollRepeatButtonStyle"  TargetType="{x:Type RepeatButton}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MySimpleScrollRepeatButtonStyle2"  TargetType="{x:Type RepeatButton}">
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid x:Name="Root">
                    	<Border Margin="0,0,-2,0" VerticalAlignment="Center" Height="7" BorderThickness="0" CornerRadius="2" >
                        	<Rectangle  Stroke="{x:Null}" RadiusX="2" RadiusY="2" StrokeThickness="0" Margin="0,1" Fill="{DynamicResource LColorDarkLight}"/>
						</Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MySimpleSlider" TargetType="{x:Type Slider}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Grid x:Name="GridRoot">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- TickBar shows the ticks for Slider -->
                        <TickBar Visibility="Collapsed" x:Name="TopTick" Height="4" SnapsToDevicePixels="True" Placement="Top" Fill="{DynamicResource GlyphBrush}"/>
                        <Border Grid.Row="1" Margin="0" x:Name="Border" Height="10" BorderBrush="#F4CCCCCC" CornerRadius="2" BorderThickness="0,1,1,1" Background="#66000000"/>

                        <!--<Rectangle Height="7" Margin="0" Grid.Column="0" Grid.ColumnSpan="3" Stroke="{StaticResource PBorderDark}" StrokeThickness="0.5" RadiusX="9" RadiusY="9" Fill="{StaticResource PSlideHorisontal}"/>-->
                        <!-- The Track lays out the repeat buttons and thumb -->
                        <Track Grid.Row="1" x:Name="PART_Track">
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{DynamicResource MySimpleScrollRepeatButtonStyle}" Command="Slider.IncreaseLarge"/>
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{DynamicResource MySimpleScrollRepeatButtonStyle}" Command="Slider.DecreaseLarge"/>
                            </Track.DecreaseRepeatButton>
							<Track.Thumb>
                                <Thumb Style="{DynamicResource MySimpleSliderThumb}" Height="14" Width="37"/>
                            </Track.Thumb>
                        </Track>

                        <TickBar Visibility="Collapsed" Grid.Row="2" x:Name="BottomTick" Height="4" SnapsToDevicePixels="True" Placement="Bottom" Fill="{TemplateBinding Foreground}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement" Value="TopLeft">
                            <Setter Property="Visibility" Value="Visible" TargetName="TopTick"/>
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="BottomRight">
                            <Setter Property="Visibility" Value="Visible" TargetName="BottomTick"/>
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter Property="Visibility" Value="Visible" TargetName="TopTick"/>
                            <Setter Property="Visibility" Value="Visible" TargetName="BottomTick"/>
                        </Trigger>
                        <!-- Use a rotation to create a Vertical Slider form the default Horizontal -->
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="GridRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                            <!-- Track rotates itself based on orientation so need to force it back -->
                            <Setter TargetName="PART_Track" Property="Orientation" Value="Horizontal"/>
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	</UserControl.Resources>

	<Grid x:Name="LayoutRoot">
		<Slider x:Name="SL_Progress" BorderBrush="{x:Null}" Foreground="{x:Null}" Style="{StaticResource MySimpleSlider}"  Maximum="10000" LargeChange="0.1" SmallChange="0.01" Value="424" Orientation="Vertical" HorizontalAlignment="Center">
			<Slider.Background>
				<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
					<GradientStop Color="White" Offset="0"/>
					<GradientStop Color="#FFE9E2E2" Offset="1"/>
				</LinearGradientBrush>
			</Slider.Background>
		</Slider>
	</Grid>
</UserControl>